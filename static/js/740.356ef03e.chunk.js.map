{"version":3,"file":"static/js/740.356ef03e.chunk.js","mappings":"uUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,kCAEZC,EAAW,mCAAG,oGACAH,EAAAA,EAAAA,IAAA,sCAAyCC,IADzC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDO,EAApD,YADC,cAClBJ,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZI,EAAU,mCAAG,WAAOC,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADxC,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVM,EAAO,mCAAG,WAAOD,GAAP,uFACIV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,IADnD,cACbG,EADa,yBAEZA,EAASC,KAAKO,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAOH,GAAP,uFACCV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,YADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD,0HCgCvB,UArDe,WACb,OAA4BQ,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMX,EAAQU,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAkBjB,OATAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVf,GAA0B,OAAVA,EAApB,CACA,IAAMgB,EAAS,mCAAG,uGACUjB,EAAAA,EAAAA,IAAaC,GADvB,gBACRF,EADQ,EACRA,QACRU,EAAUV,GAFM,2CAAH,qDAIfkB,GAL0C,CAM3C,GAAE,CAAChB,KAGF,+BACE,iBAAKiB,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAMD,UAAWC,EAAAA,EAAAA,WAAmBC,SAnBrB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAChBZ,EAA0B,KAAVX,EAAe,CAAEA,MAAOsB,EAAME,SAASxB,MAAMyB,OAAU,CAAC,GACxEH,EAAMI,OACP,EAcK,WACE,kBACET,UAAWC,EAAAA,EAAAA,gBACXS,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,YAAY,kBAEd,mBAAQH,KAAK,SAASV,UAAWC,EAAAA,EAAAA,iBAAjC,wBAKF,eAAID,UAAWC,EAAAA,EAAAA,KAAf,SACGX,GACCA,EAAOwB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMvB,GAA1C,UACE,uBAAIoB,OAFCD,EADA,UAWtB,C,oBCxDD,KAAgB,SAAW,wBAAwB,KAAO,oBAAoB,WAAa,0BAA0B,iBAAmB,gCAAgC,gBAAkB,+B","sources":["API/fetchMovies.js","Pages/Movies.jsx","webpack://react-homework-template/./src/Pages/Pages.module.css?df53"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'dd32b08009b8c26db83a645989914c74';\n\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data;\n}\n\nexport const getDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const getCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n}\n\nexport const getReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n    return response.data.results;\n}","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { searchMovies } from 'API/fetchMovies';\n\nimport styles from './Pages.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const input = e.currentTarget;\n    setSearchParams(query !== '' ? { query: input.elements.query.value } : {});\n    input.reset();\n  };\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n    const getMovies = async () => {\n      const { results } = await searchMovies(query);\n      setMovies(results);\n    };\n    getMovies();\n  }, [query]);\n\n  return (\n    <>\n      <div className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={handleSubmit}>\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            placeholder=\"Search movie\"\n          />\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            Search\n          </button>\n        </form>\n\n        <ul className={styles.list}>\n          {movies &&\n            movies.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <p>{title}</p>\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"trending\":\"Pages_trending__ZSslv\",\"list\":\"Pages_list__TlrcV\",\"SearchForm\":\"Pages_SearchForm__y3vTI\",\"SearchFormButton\":\"Pages_SearchFormButton__Fm0-W\",\"SearchFormInput\":\"Pages_SearchFormInput__almwF\"};"],"names":["axios","API_KEY","IMAGE_URL","getTrending","response","data","results","searchMovies","query","getDetails","movieId","getCast","cast","getReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","getMovies","className","styles","onSubmit","e","preventDefault","input","currentTarget","elements","value","reset","type","name","autoComplete","placeholder","map","id","title","to","state","from"],"sourceRoot":""}